version: "3"
services:

  gateway:
    image: nginx:1.25-bookworm
    volumes:
      - ./gateway_nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8000:80"
    depends_on:
      - order-service
      - stock-service
      - payment-service

  order-service:
    build: ./order
    image: order:latest
    environment:
      - GATEWAY_URL=http://gateway:80
      - MQ_REPLICAS = ${REPLICAS}
    command: gunicorn -b 0.0.0.0:5000 -w 2 --timeout 30 --log-level=info app:app
    env_file:
      - env/order_redis.env
    depends_on:
      - order-db

  order-db:
    image: redis:7.2-bookworm
    command: redis-server --requirepass redis --maxmemory 512mb
    volumes:
      - orderdb:/data

  stock-service:
    build: ./stock
    image: stock:latest
    command: gunicorn -b 0.0.0.0:5000 -w 2 --timeout 30 --log-level=info app:app
    env_file:
      - env/stock_redis.env
    depends_on:
      - stock-db

  stock-db:
    image: redis:7.2-bookworm
    command: redis-server --requirepass redis --maxmemory 512mb
    volumes:
      - stockdb:/data

  payment-service:
    build: ./payment
    image: user:latest
    command: gunicorn -b 0.0.0.0:5000 -w 2 --timeout 30 --log-level=info app:app
    env_file:
      - env/payment_redis.env
    depends_on:
      - payment-db

  payment-db:
    image: redis:7.2-bookworm
    command: redis-server --requirepass redis --maxmemory 512mb
    volumes:
      - paymentdb:/data

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.13.2-management
    ports:
      - '4369:4369'
      - '5671:5671'
      - '5672:5672'
      - '15672:15672'  # Port for accessing the management UI
      - '25672:25672'      
    volumes:
      - rabbitmq:/var/lib/rabbitmq

  rabbitmq-consumer:
    build: ./rabbitmq-consumer
    image: rabbitmq-consumer:latest
    restart: always
    environment:
      - GATEWAY_URL=http://gateway:80
      - MQ_REPLICAS = ${REPLICAS}
    depends_on:
      - rabbitmq
    deploy: 
      replicas: ${REPLICAS}


volumes:
  rabbitmq:
  orderdb:
  stockdb:
  paymentdb:
